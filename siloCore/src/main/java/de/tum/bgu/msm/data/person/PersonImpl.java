package de.tum.bgu.msm.data.person;

import de.tum.bgu.msm.data.household.Household;
import org.matsim.utils.objectattributes.attributable.Attributes;
import org.matsim.utils.objectattributes.attributable.AttributesImpl;

import java.util.Optional;

public class PersonImpl implements Person {

    private final Attributes attributes = new AttributesImpl();

    // Note: if attributes are edited, remember to edit attributes for inmigrants in \relocation\InOutMigration\setupInOutMigration.java and \relocation\InOutMigration\inmigrateHh.java as well
    //Attributes that must be initialized when one person is generated
    private final int id;
    private int age;
    private final Gender gender;
    private Occupation occupation;
    private PersonRole role;
    private int jobId;
    private int income;

    //Attributes that are generated by SILO
    private Household household;
    private PersonType type;



    //Attributes that could be additionally defined from the synthetic population. Remember to use "set"
    private boolean driverLicense = false;

    public PersonImpl(int id, int age, Gender gender, Occupation occupation, PersonRole role, int jobId, int income) {
        this.id = id;
        this.age = age;
        this.gender = gender;
        this.occupation = occupation;
        this.role = role;
        this.jobId = jobId;
        this.income = income;
        setType();
    }

    private void setType () {
        this.type = PersonType.defineType(this);
    }

    @Override
    public void setHousehold(Household household) {
        this.household = household;
    }

    @Override
    public Household getHousehold() {
        return this.household;
    }

    @Override
    public void setRole(PersonRole pr) {
        this.role = pr;
    }

    @Override
    public void birthday() {
        this.age++;
        setType();
    }

    @Override
    public void setIncome (int newIncome) {
        this.income = newIncome;
        household.updateHouseholdType();
    }

    @Override
    public void setWorkplace(int newWorkplace) {
        this.jobId = newWorkplace;
    }

    @Override
    public void setOccupation(Occupation newOccupation) {
        this.occupation = newOccupation;
    }

    @Override
    public int getId() {
        return id;
    }

    @Override
    public int getAge() {
        return age;
    }

    @Override
    public Gender getGender() {
        return gender;
    }

    @Override
    public Occupation getOccupation() {
        return occupation;
    }

    @Override
    public int getAnnualIncome() {
        return income;
    }

    @Override
    public PersonType getType() {
        return type;
    }

    @Override
    public PersonRole getRole() {
        return role;
    }

    @Override
    public int getJobId() {
        return jobId;
    }

    @Override
    public void setDriverLicense(boolean driverLicense){ this.driverLicense = driverLicense;}

    @Override
    public boolean hasDriverLicense() { return driverLicense; }

    @Override
    public String toString() {
        return "+++ Person " + id
                +"\nHousehold id         " + (household == null ? "null": household.getId())
                +"\nAge                  " + age
                +"\nGender               " + gender
                +"\nRole in household    " + role
                +"\nOccupation           " + occupation
                +"\nWorkplace ID         " + jobId
                +"\nIncome               " + income
                +"\nPerson type          " + type.toString();
    }

    @Override
    public int hashCode() {
        return id;
    }

    @Override
    public boolean equals(Object o) {
        return o instanceof Person && ((Person) o).getId() == this.id;
    }

    @Override
    public Optional<Object> getAttribute(String key) {
        return Optional.ofNullable(attributes.getAttribute(key));
    }

    @Override
    public void setAttribute(String key, Object value) {
        attributes.putAttribute(key, value);
    }

}
